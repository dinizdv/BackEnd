npm init -y => starts the project

tsc --init => starts the ts

npm install config dotenv express express-validator mongoose morgan winston => install development dependencies

npm install @types/config @types/express @types/mongoose @types/morgan @types/node ts-node-dev typescript --save-dev

"dev": "ts-node-dev --respawn --transpile-only src/app.ts" => change the scripts (package.json)

npm run dev => run the code

express config => async function + open the door (config and default.ts)

router creation + send res status

create a MongoDB Atlas database + db.ts config with mongoose

create a .env file => for db user and db password + access variables (process.env.YOUR_VARIABLE)

create a .gitignore file => not push .env and node_modules

create a logger => using winston to config levels, colors and files transports

create a morganMiddleware => to show on console the requests HTTP status (loggins them)

create a models + Movie.ts => new Schema exported
-> MODELS: contain data validation, bussiness laws, logic, access db

create a controllers => function for create movie
-> CONTROLLERS: receive the requests. Can be to change the model state, as a post request, for example

create a handleValidation.ts for get errors => display in each individual route (because just some need)